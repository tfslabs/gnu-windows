.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Font::TTF::OldMort 3pm"
.TH Font::TTF::OldMort 3pm "2016-08-03" "perl v5.36.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Font::TTF::OldMort \- Glyph Metamorphosis table in a font
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
.SH "INSTANCE VARIABLES"
.IX Header "INSTANCE VARIABLES"
.IP "version" 4
.IX Item "version"
table version number (Fixed: currently 1.0)
.IP "chains" 4
.IX Item "chains"
list of metamorphosis chains, each of which has its own fields:
.RS 4
.IP "defaultFlags" 4
.IX Item "defaultFlags"
chain's default subfeature flags (UInt32)
.IP "featureEntries" 4
.IX Item "featureEntries"
list of feature entries, each of which has fields:
.RS 4
.IP "type" 4
.IX Item "type"
.PD 0
.IP "setting" 4
.IX Item "setting"
.IP "enable" 4
.IX Item "enable"
.IP "disable" 4
.IX Item "disable"
.RE
.RS 4
.RE
.IP "subtables" 4
.IX Item "subtables"
.PD
list of metamorphosis subtables, each of which has fields:
.RS 4
.IP "type" 4
.IX Item "type"
subtable type (0: rearrangement; 1: contextual substitution; 2: ligature;
4: non-contextual substitution; 5: insertion)
.IP "direction" 4
.IX Item "direction"
processing direction ('\s-1LR\s0' or '\s-1RL\s0')
.IP "orientation" 4
.IX Item "orientation"
applies to text in which orientation ('\s-1VH\s0', 'V', or 'H')
.IP "subFeatureFlags" 4
.IX Item "subFeatureFlags"
the subfeature flags controlling whether the table is used (UInt32)
.RE
.RS 4
.Sp
Further fields depend on the type of subtable:
.Sp
.RS 4
Rearrangement table:
.IP "classes" 4
.IX Item "classes"
array of lists of glyphs
.IP "states" 4
.IX Item "states"
array of arrays of hashes{'nextState', 'flags'}
.RE
.RS 4
.Sp
Contextual substitution table:
.IP "classes" 4
.IX Item "classes"
array of lists of glyphs
.IP "states" 4
.IX Item "states"
array of array of hashes{'nextState', 'flags', 'actions'}, where \f(CW\*(C`actions\*(C'\fR
is an array of two elements which are offsets to be added to [marked, current]
glyph to get index into \f(CW\*(C`mappings\*(C'\fR (or \f(CW\*(C`undef\*(C'\fR if no mapping to be applied)
.IP "mappings" 4
.IX Item "mappings"
list of glyph codes mapped to through the state table mappings
.RE
.RS 4
.Sp
Ligature table:
.Sp
Non-contextual substitution table:
.Sp
Insertion table:
.RE
.RE
.RS 4
.RE
.RE
.RS 4
.RE
.SH "METHODS"
.IX Header "METHODS"
.ie n .SS "$t\->read"
.el .SS "\f(CW$t\fP\->read"
.IX Subsection "$t->read"
Reads the table into memory
.ie n .SS "$t\->out($fh)"
.el .SS "\f(CW$t\fP\->out($fh)"
.IX Subsection "$t->out($fh)"
Writes the table to a file either from memory or by copying
.ie n .SS "$t\->print($fh)"
.el .SS "\f(CW$t\fP\->print($fh)"
.IX Subsection "$t->print($fh)"
Prints a human-readable representation of the table
.SH "BUGS"
.IX Header "BUGS"
None known
.SH "AUTHOR"
.IX Header "AUTHOR"
Jonathan Kew <http://scripts.sil.org/FontUtils>.
.SH "LICENSING"
.IX Header "LICENSING"
Copyright (c) 1998\-2016, \s-1SIL\s0 International (http://www.sil.org)
.PP
This module is released under the terms of the Artistic License 2.0. 
For details, see the full text of the license in the file \s-1LICENSE.\s0
