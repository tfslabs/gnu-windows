.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Font::TTF::GrFeat 3pm"
.TH Font::TTF::GrFeat 3pm "2016-08-03" "perl v5.36.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Font::TTF::GrFeat \- Graphite Font Features
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
.SH "INSTANCE VARIABLES"
.IX Header "INSTANCE VARIABLES"
.IP "version" 4
.IX Item "version"
.PD 0
.IP "features" 4
.IX Item "features"
.PD
An array of hashes of the following form
.RS 4
.IP "feature" 8
.IX Item "feature"
feature id number
.IP "name" 8
.IX Item "name"
name index in name table
.IP "exclusive" 8
.IX Item "exclusive"
exclusive flag
.IP "default" 8
.IX Item "default"
the default setting number
.IP "settings" 8
.IX Item "settings"
hash of setting number against name string index
.RE
.RS 4
.RE
.SH "METHODS"
.IX Header "METHODS"
.ie n .SS "$t\->read"
.el .SS "\f(CW$t\fP\->read"
.IX Subsection "$t->read"
Reads the features from the \s-1TTF\s0 file into memory
.ie n .SS "$t\->out($fh)"
.el .SS "\f(CW$t\fP\->out($fh)"
.IX Subsection "$t->out($fh)"
Writes the features to a \s-1TTF\s0 file
.ie n .SS "$t\->\fBminsize()\fP"
.el .SS "\f(CW$t\fP\->\fBminsize()\fP"
.IX Subsection "$t->minsize()"
Returns the minimum size this table can be. If it is smaller than this, then the table
must be bad and should be deleted or whatever.
.ie n .SS "$t\->print($fh)"
.el .SS "\f(CW$t\fP\->print($fh)"
.IX Subsection "$t->print($fh)"
Prints a human-readable representation of the table
.ie n .SS "$t\->tag_to_num ($feat_str)"
.el .SS "\f(CW$t\fP\->tag_to_num ($feat_str)"
.IX Subsection "$t->tag_to_num ($feat_str)"
Convert an alphanumeric feature id tag (string) to a number (32\-bit).
Tags are normally 4 chars. Graphite ignores space
padding if it is present, so we do the same here.
.ie n .SS "$t\->num_to_tag ($feat_num)"
.el .SS "\f(CW$t\fP\->num_to_tag ($feat_num)"
.IX Subsection "$t->num_to_tag ($feat_num)"
Convert a feature id number (32\-bit) back to a tag (string).
Trailing space or null padding is removed.
Feature id numbers that do not represent alphanumeric tags 
are returned unchanged.
.SH "BUGS"
.IX Header "BUGS"
The version 1 Feat table ends with a feature (id 1) named NoName
with zero settings but with an offset to the last entry in the setting
array. This last setting has id 0 and an invalid name id. This last
feature is changed to have one setting.
.SH "AUTHOR"
.IX Header "AUTHOR"
Alan Ward (derived from Jonathan Kew's Feat.pm).
.SH "LICENSING"
.IX Header "LICENSING"
Copyright (c) 1998\-2016, \s-1SIL\s0 International (http://www.sil.org)
.PP
This module is released under the terms of the Artistic License 2.0. 
For details, see the full text of the license in the file \s-1LICENSE.\s0
