.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Font::TTF::Head 3pm"
.TH Font::TTF::Head 3pm "2016-08-03" "perl v5.36.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Font::TTF::Head \- The head table for a TTF Font
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This is a very basic table with just instance variables as described in the
\&\s-1TTF\s0 documentation, using the same names. One of the most commonly used is
\&\f(CW\*(C`unitsPerEm\*(C'\fR.
.SH "INSTANCE VARIABLES"
.IX Header "INSTANCE VARIABLES"
The \f(CW\*(C`head\*(C'\fR table has no internal instance variables beyond those common to all
tables and those specified in the standard:
.PP
.Vb 10
\&    version
\&    fontRevision
\&    checkSumAdjustment
\&    magicNumber
\&    flags
\&    unitsPerEm
\&    created
\&    modified
\&    xMin
\&    yMin
\&    xMax
\&    yMax
\&    macStyle
\&    lowestRecPPEM
\&    fontDirectionHint
\&    indexToLocFormat
\&    glyphDataFormat
.Ve
.PP
The two dates are held as an array of two unsigned longs (32\-bits)
.SH "METHODS"
.IX Header "METHODS"
.ie n .SS "$t\->read"
.el .SS "\f(CW$t\fP\->read"
.IX Subsection "$t->read"
Reads the table into memory thanks to some utility functions
.ie n .SS "$t\->out($fh)"
.el .SS "\f(CW$t\fP\->out($fh)"
.IX Subsection "$t->out($fh)"
Writes the table to a file either from memory or by copying. If in memory
(which is usually) the checkSumAdjustment field is set to 0 as per the default
if the file checksum is not to be considered.
.ie n .SS "$t\->\fBminsize()\fP"
.el .SS "\f(CW$t\fP\->\fBminsize()\fP"
.IX Subsection "$t->minsize()"
Returns the minimum size this table can be. If it is smaller than this, then the table
must be bad and should be deleted or whatever.
.ie n .SS "$t\->XML_element($context, $depth, $key, $value)"
.el .SS "\f(CW$t\fP\->XML_element($context, \f(CW$depth\fP, \f(CW$key\fP, \f(CW$value\fP)"
.IX Subsection "$t->XML_element($context, $depth, $key, $value)"
Handles date process for the \s-1XML\s0 exporter
.ie n .SS "$t\->update"
.el .SS "\f(CW$t\fP\->update"
.IX Subsection "$t->update"
Updates the head table based on the glyph data and the hmtx table
.ie n .SS "$t\->getdate($is_create)"
.el .SS "\f(CW$t\fP\->getdate($is_create)"
.IX Subsection "$t->getdate($is_create)"
Converts font modification time (or creation time if \f(CW$is_create\fR is set) to a 32\-bit integer as returned
from \fBtime()\fR. Returns undef if the value is out of range, either before the epoch or after the maximum
storable time.
.ie n .SS "$t\->setdate($time, $is_create)"
.el .SS "\f(CW$t\fP\->setdate($time, \f(CW$is_create\fP)"
.IX Subsection "$t->setdate($time, $is_create)"
Sets the time information for modification (or creation time if \f(CW$is_create\fR is set) according to the 32\-bit
time information.
.SH "BUGS"
.IX Header "BUGS"
None known
.SH "AUTHOR"
.IX Header "AUTHOR"
Martin Hosken <http://scripts.sil.org/FontUtils>.
.SH "LICENSING"
.IX Header "LICENSING"
Copyright (c) 1998\-2016, \s-1SIL\s0 International (http://www.sil.org)
.PP
This module is released under the terms of the Artistic License 2.0. 
For details, see the full text of the license in the file \s-1LICENSE.\s0
